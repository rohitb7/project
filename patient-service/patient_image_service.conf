[default]
id = intuitive

[metamonitoring]
path=/metrics
listen=:8989

[http_server]
http_endpoint = :9797
grpc_endpoint = localhost:9798
server_retries = 3
allow_crud = true
; move to seperate section
mode = docker

[server]
uploads_location = /var/tmp/
read_timeout = 10s
write_timeout = 10s
test_mode = false

[worker_pool]
; Number of worker threads
workers = 10
; Task Queue size
task_queue_size = 300

[sqldb]
server = postgres-patients  # Use the service name of the PostgreSQL container
; port = 5432
username = postgres
password = mysecretpassword
dbname = patients_db

[s3_bucket]
bucket = mybucket
region = us-west-1

; is basically the southbound image service conf
[s3_config]
s3_provider = minio_server  # Use the service name or container name of the MinIO server
; url = http://minio_server:9000  # Use the service name or container name with the appropriate port
url = minio_server
access_key = minioadmin
secret_access = minioadmin
bucket = mybucket
region = us-west-1
; move to seperate section
mode = docker


[s3_manager_config]
# upload concurrency , not used
upload_concurrency = 5
# download concurrency, not used
download_concurrency = 5
# generic timeout for aws api calls
context_timeout = 180s
# timeout for upload and multipart upload for aws api calls
max_upload_context_timeout = 180s
# timeout for download for aws api calls
max_download_context_timeout = 180s
# retry count for aws api calls
retry_count = 3
# retry delay for aws api calls
retry_delay = 3s
storage_class = STANDARD

; [test]
; test_dir = /tmp/storage/
; test_downloads_location = /Users/rborade/go/project/patient-service/temperory-downloads
; ## used for testing 2nd cloud  - start ##
